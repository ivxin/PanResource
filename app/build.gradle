apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'

static def releaseTime() {
    return new Date().format("yyyy-MM-dd_HHmmss", TimeZone.getDefault())
}

android {
    compileSdkVersion 30
    buildToolsVersion "29.0.3"
    defaultConfig {
        applicationId "com.ivxin.panresource"
        minSdkVersion 26
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"
    }
    signingConfigs {
        //加载资源
        Properties properties = new Properties()
        InputStream inputStream = project.rootProject.file('local.properties').newDataInputStream()
        properties.load(inputStream)
        //读取字段
        def debugKeyPath = properties.getProperty('debugkey.path')
        def keystorePath = properties.getProperty('keystore.path')
        def keystorePSW = properties.getProperty('keystore.password')
        def keystoreAlias = properties.getProperty('keystore.alias')
        def keystoreAliasPSW = properties.getProperty('keystore.alias_password')
        debug {
            storeFile file(debugKeyPath)
            storePassword keystorePSW
            keyAlias keystoreAlias
            keyPassword keystoreAliasPSW
        }

        release {
            storeFile file(keystorePath)
            storePassword keystorePSW
            keyAlias keystoreAlias
            keyPassword keystoreAliasPSW
            v2SigningEnabled false
        }
    }

    buildTypes {
        debug {
            // 显示Log
            buildConfigField "boolean", "LOG_DEBUG", "true"
            zipAlignEnabled false
            signingConfig signingConfigs.debug
        }
        release {
            proguardFiles 'proguard-rules.txt'
            // 不显示Log
            buildConfigField "boolean", "LOG_DEBUG", "false"
            //是否支持Zip Align
            zipAlignEnabled true
            // 移除无用的resource文件
//            minifyEnabled true
//            shrinkResources true
            //是否支持本地化整理
            pseudoLocalesEnabled true
            signingConfig signingConfigs.release
            android.applicationVariants.all { variant ->
                variant.outputs.all {
                    // 输出apk名称为panresource_v1.0_2015-01-15.apk
                    outputFileName = "panresource_v${defaultConfig.versionName}_${releaseTime()}.apk"
                }
            }
        }
    }
    buildFeatures {
        viewBinding = true
    }
    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/plexus/components.xml'

    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'org.jsoup:jsoup:1.11.3'
    //https://github.com/grantland/android-autofittextview
    implementation 'me.grantland:autofittextview:0.2.1'
    //https://github.com/hzy3774/AndroidP7zip
    implementation 'com.hzy:libp7zip:1.7.0'
    //https://github.com/SusionSuc/DraggableImageViewer
    implementation 'com.susion:image-viewer:1.0.2'
    //Glide图片加载器 glide https://github.com/bumptech/glide
    implementation 'com.github.bumptech.glide:glide:4.9.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.9.0'
    //Glide transformation转换库，可以剪切图片，高斯模糊，添加滤镜等等
    implementation 'jp.wasabeef:glide-transformations:3.3.0'
    implementation "androidx.core:core-ktx:1.2.0"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.9'
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.9"
}
repositories {
    mavenCentral()
}
